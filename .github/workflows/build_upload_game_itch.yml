name: Every 60 minutes check new commits/build from repo for different platforms

on: 
  workflow_dispatch:
  schedule:
    - cron: '*/60 * * * *' # TODO change cron job to every 15 minutes?

jobs:
  check:
    name: Check for new commits in the last hour
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.evaluate.outputs.continue }}
    steps:
      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.REPO_NAME }} # Change title for other workflows
          token: ${{ secrets.ACCESS_TOKEN_REPO }}
      - name: Get new commits
        id: evaluate
        run: | # Change the time here according to your cron schedule # 
          NEW_COMMIT_COUNT=$(git log --oneline --since '59 minutes ago' | wc -l)
          echo "New commit count: $NEW_COMMIT_COUNT"
          if [ "$NEW_COMMIT_COUNT" -gt 0 ] || [ "${{ github.event_name }}" == 'workflow_dispatch' ]; then
            echo "continue=true" >> $GITHUB_OUTPUT
          else
            echo "continue=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Building for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    needs: 
      - check
    if: needs.check.outputs.continue == 'true'
    strategy:
      fail-fast: false
      matrix:
        targetPlatform: # see https://docs.unity3d.com/ScriptReference/BuildTarget.html
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
          - StandaloneOSX
          - WebGL
    steps:
      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.REPO_NAME }} # Change title for other workflows
          token: ${{ secrets.ACCESS_TOKEN_REPO }}

      - name: Cache files for faster build
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - name: Build project with unity
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: auto
          projectPath: .
          versioning: Semantic
          buildName: ${{ vars.GAME_TITLE }} # Change title for other workflows
          
      - name: Upload build results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.GAME_TITLE }}-${{ matrix.targetPlatform }} # Change title for other workflows
          path: build/${{ matrix.targetPlatform }}

  publish:
    name: Uploading to itch.io for ${{ matrix.targetPlatform }}
    needs: 
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
          - StandaloneOSX
          - WebGL
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ vars.GAME_TITLE }}-${{ matrix.targetPlatform }} # Change title for other workflows
          path: build/${{ matrix.targetPlatform }}

      - name: Publish to itch.io
        uses: manleydev/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_API_KEY }}
          CHANNEL: ${{ matrix.targetPlatform }} # see https://itch.io/docs/butler/pushing.html # Change title for other workflows
          ITCH_GAME: ${{ vars.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          VERSION: ${{ vars.VERSION }}.${{ github.run_number }}
          PACKAGE: build/${{ matrix.targetPlatform }}

  cleanup:
    name: Deleting uploaded artifacts
    if: always()
    needs:
      - publish
    runs-on: ubuntu-latest
    steps:
      - name: Delete published artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
            name: ${{ vars.GAME_TITLE }}-* # Change title for other workflows
